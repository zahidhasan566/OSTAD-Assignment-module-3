pipeline {
    agent any

    environment {
        REMOTE_USER = 'ubuntu'
        REMOTE_HOST = '13.239.134.104'
        PROJECT_DIR = '/home/ubuntu/OSTAD-Assignment-module-3'
        NODE_PATH = '/home/ubuntu/.nvm/versions/node/v18.17.1/bin/npm'
        SLACK_CHANNEL = '#all-cicdnodejs'
    }

    stages {
        stage('Pull Latest Code') {
            steps {
                echo 'Updating code on production server...'
                sshagent(['remote-ssh-key']) {
                    sh """
                        ssh -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} '
                            cd ${PROJECT_DIR} &&
                            git pull origin main
                        '
                    """
                }
            }
        }

stage('Install Dependencies') {
    steps {
        echo 'Running npm install...'
        sshagent(['remote-ssh-key']) {
            sh """
                ssh -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} '
                    cd ${PROJECT_DIR} &&
                    npm install
                '
            """
        }
    }
}


stage('Run Tests') {
    steps {
        echo 'Running tests and generating JUnit report...'
        sh 'npm test'
        junit 'reports/junit.xml'
    }
}
        stage('Restart with PM2') {
            steps {
                echo 'Restarting PM2 process...'
                sshagent(['remote-ssh-key']) {
                    sh """
                        ssh -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} '
                            pm2 reload server || pm2 start src/server.js --name server &&
                            pm2 save
                        '
                    """
                }
            }
        }
    }

    post {
     success {
         slackSend(
             channel: '#all-cicdnodejs',
             message: "✅ Deployment succeeded on ${env.JOB_NAME} #${env.BUILD_NUMBER}",
             tokenCredentialId: 'slack-token',
             baseUrl: 'https://slack.com/api/',
             teamDomain: '#all-cicdnodejs' // <--- your actual Slack team domain (e.g., for xyz.slack.com, this is xyz)
         )
     }
     failure {
         slackSend(
             channel: '#all-cicdnodejs',
             message: "❌ Deployment failed on ${env.JOB_NAME} #${env.BUILD_NUMBER}",
             tokenCredentialId: 'slack-token',
             baseUrl: 'https://slack.com/api/',
             teamDomain: '#all-cicdnodejs'
         )
     }
    }
}