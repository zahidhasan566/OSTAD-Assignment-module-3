pipeline {
    agent any

    environment {
        REMOTE_USER = 'ubuntu'
        REMOTE_HOST = '13.239.134.104'
        PROJECT_DIR = '/home/ubuntu/OSTAD-Assignment-module-3'
        NODE_PATH = '/home/ubuntu/.nvm/versions/node/v18.17.1/bin/npm'
    }

    stages {
        stage('Pull Latest Code') {
            steps {
                echo 'Updating code on production server...'
                sshagent(['remote-ssh-key']) {
                    sh """
                        ssh -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} '
                            cd ${PROJECT_DIR} &&
                            git pull origin main
                        '
                    """
                }
            }
        }

stage('Install Dependencies') {
    steps {
        echo 'Running npm install...'
        sshagent(['remote-ssh-key']) {
            sh """
                ssh -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} '
                    cd ${PROJECT_DIR} &&
                    npm install
                '
            """
        }
    }
}



        stage('Restart with PM2') {
            steps {
                echo 'Restarting PM2 process...'
                sshagent(['remote-ssh-key']) {
                    sh """
                        ssh -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} '
                            pm2 reload server || pm2 start src/server.js --name server &&
                            pm2 save
                        '
                    """
                }
            }
        }
    }

    post {
            success {
                echo 'Deployment succeeded!'
                slackSend(channel: "${SLACK_CHANNEL}", message: "Build Succeeded*: `${env.JOB_NAME}` [#${env.BUILD_NUMBER}] (<${env.BUILD_URL}|View>)")
            }

            failure {
                echo 'Deployment failed!'
                slackSend(channel: "${SLACK_CHANNEL}", message: " *Build Failed*: `${env.JOB_NAME}` [#${env.BUILD_NUMBER}] (<${env.BUILD_URL}|View>)")

                // Optional: Discord Notification
                // sh '''
                // curl -H "Content-Type: application/json" \
                //      -X POST \
                //      -d '{"content": " Build Failed: '"${JOB_NAME}"' #'"${BUILD_NUMBER}"'"}' \
                //      https://discord.com/api/webhooks/YOUR_WEBHOOK_ID
                // '''
            }
    }
}